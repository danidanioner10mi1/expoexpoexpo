{"remainingRequest":"D:\\Proyectos Tauro\\expoexpoexpo\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Proyectos Tauro\\expoexpoexpo\\src\\components\\World.vue?vue&type=style&index=0&id=6af44d54&scoped=true&lang=css&","dependencies":[{"path":"D:\\Proyectos Tauro\\expoexpoexpo\\src\\components\\World.vue","mtime":1637811365785},{"path":"D:\\Proyectos Tauro\\expoexpoexpo\\node_modules\\css-loader\\dist\\cjs.js","mtime":1637805821591},{"path":"D:\\Proyectos Tauro\\expoexpoexpo\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1637805833355},{"path":"D:\\Proyectos Tauro\\expoexpoexpo\\node_modules\\postcss-loader\\src\\index.js","mtime":1637805825444},{"path":"D:\\Proyectos Tauro\\expoexpoexpo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1637805816000},{"path":"D:\\Proyectos Tauro\\expoexpoexpo\\node_modules\\vue-loader\\lib\\index.js","mtime":1637805831338}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoud29ybGQgewogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICBib3R0b206IDA7CiAgbWFyZ2luOiAwOwogIHBhZGRpbmc6IDA7CiAgd2lkdGg6IDEwMCU7CiAgaGVpZ2h0OiAxMDAlOwogIAogICBiYWNrZ3JvdW5kOnVybCgnZm9uZG8uanBnJyk7Cn0K"},{"version":3,"sources":["World.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2GA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"World.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"world\" ref=\"container\"></div>\n</template>\n\n<script>\nimport * as THREE from \"three\";\nimport RAFManager from \"raf-manager\";\nimport Rocks from \"./Rocks\";\nimport Album from \"./Album\";\nimport Mouse from \"./Mouse\";\nimport FollowEffect from \"./FollowEffect\";\nimport texture from \"../assets/dot.png\";\n\nexport default {\n  name: \"World\",\n  mounted() {\n    this.initThree();\n    this.addLight();\n    this.addBackRocks();\n    this.addAlbum();\n    this.addMouseAndEffect();\n\n    this.render = this.render.bind(this);\n    RAFManager.add(this.render);\n  },\n  destroyed() {\n    RAFManager.remove(this.render);\n  },\n\n  methods: {\n    initThree: function() {\n      const container = this.$refs.container;\n      const camera = new THREE.PerspectiveCamera(\n        45,\n        container.offsetWidth / container.offsetHeight,\n        1,\n        3000\n      );\n      camera.position.z = 500;\n\n      const scene = new THREE.Scene();\n      const renderer = new THREE.WebGLRenderer({ alpha: true });\n      renderer.setPixelRatio(window.devicePixelRatio);\n      renderer.setSize(container.offsetWidth, container.offsetHeight);\n      container.appendChild(renderer.domElement);\n      renderer.setClearColor(0x000000, 0);\n      const clock = new THREE.Clock();\n\n      this.clock = clock;\n      this.scene = scene;\n      this.camera = camera;\n      this.renderer = renderer;\n    },\n\n    addLight: function() {\n      const { scene } = this;\n\n      const hemiLight = new THREE.HemisphereLight(0xffffff, 0x444444);\n      hemiLight.position.set(0, 1000, 0);\n      scene.add(hemiLight);\n\n      const dirLight = new THREE.DirectionalLight(0xffffff, 0.8);\n      dirLight.position.set(-3000, 1000, -1000);\n      scene.add(dirLight);\n    },\n\n    addBackRocks: function() {\n      const { scene } = this;\n      const rocks = new Rocks();\n      rocks.addToScene(scene);\n      this.rocks = rocks;\n    },\n\n    addAlbum: function() {\n      const { scene, camera, renderer } = this;\n      const album = new Album({ camera, renderer });\n      album.addToScene(scene);\n      this.album = album;\n    },\n\n    addMouseAndEffect: function() {\n      const { scene, renderer, camera, album } = this;\n      const follow = new FollowEffect({\n        texture,\n        renderer,\n        camera,\n        scene\n      });\n\n      new Mouse({ display: album.display, camera, renderer });\n\n      this.follow = follow;\n    },\n\n    render: function() {\n      const { renderer, scene, camera, rocks, clock, follow } = this;\n\n      follow.render();\n      rocks.render(clock);\n      renderer.render(scene, camera);\n    }\n  }\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.world {\n  position: absolute;\n  bottom: 0;\n  margin: 0;\n  padding: 0;\n  width: 100%;\n  height: 100%;\n  \n   background:url('fondo.jpg');\n}\n</style>\n"]}]}